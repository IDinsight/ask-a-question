model_list:
  - model_name: embeddings
    litellm_params:
      model: text-embedding-3-small
      api_key: "os.environ/OPENAI_API_KEY"
  # - model_name: embeddings
  #   litellm_params:
  #     model: huggingface/custom_embeddings # model name not important
  #     api_key: "os.environ/CUSTOM_EMBEDDINGS_API_KEY" #pragma: allowlist secret
  #     api_base: "os.environ/CUSTOM_EMBEDDINGS_ENDPOINT"
  - model_name: default
    litellm_params:
      model: gpt-4o
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: generate-response
    litellm_params:
      model: gpt-4o
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: generate-gemini-response
    litellm_params:
      # Set VERTEXAI_ENDPOINT environment variable or directly enter the value:
      api_base: "os.environ/VERTEXAI_ENDPOINT"
      model: vertex_ai/gemini-1.5-pro
      safety_settings:
        - category: HARM_CATEGORY_HARASSMENT
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_HATE_SPEECH
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_SEXUALLY_EXPLICIT
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_DANGEROUS_CONTENT
          threshold: BLOCK_ONLY_HIGH
  - model_name: detect-language
    litellm_params:
      model: gpt-4o
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: on-off-topic
    litellm_params:
      model: gpt-3.5-turbo-1106
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: translate
    litellm_params:
      model: gpt-3.5-turbo-1106
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: paraphrase
    litellm_params:
      model: gpt-3.5-turbo-1106
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: safety
    litellm_params:
      model: gpt-3.5-turbo-1106
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: alignscore
    litellm_params:
      model: gpt-4o
      api_key: "os.environ/OPENAI_API_KEY"
  - model_name: alignscore-gemini
    litellm_params:
      # Set VERTEXAI_ENDPOINT environment variable or directly enter the value:
      api_base: "os.environ/VERTEXAI_ENDPOINT"
      model: vertex_ai/gemini-1.5-pro
      safety_settings:
        - category: HARM_CATEGORY_HARASSMENT
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_HATE_SPEECH
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_SEXUALLY_EXPLICIT
          threshold: BLOCK_ONLY_HIGH
        - category: HARM_CATEGORY_DANGEROUS_CONTENT
          threshold: BLOCK_ONLY_HIGH
  - model_name: urgency-detection
    litellm_params:
      model: gpt-3.5-turbo-1106
      api_key: "os.environ/OPENAI_API_KEY"
litellm_settings:
  num_retries: 2 # retry call 3 times on each model_name (e.g. translate).
  request_timeout: 100 # raise Timeout error if call takes longer than 10s. Sets litellm.request_timeout
  # fallbacks: [{"paraphrase": ["default"]}] # fallback to default model if paraphrase model fails num_retries
  telemetry: False
  # To use Vertex AI API, uncomment the following lines:
  # vertex_project: gcp-project-id-12345
  # vertex_location: us-central1
  drop_params: True
