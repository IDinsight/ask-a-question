"""Updated all databases to use workspace_id instead of user_id for workspaces.

Revision ID: d835da2f09ed
Revises: 27fd893400f8
Create Date: 2025-01-28 15:29:01.239612

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d835da2f09ed"
down_revision: Union[str, None] = "27fd893400f8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "workspace",
        sa.Column("api_daily_quota", sa.Integer(), nullable=True),
        sa.Column("api_key_first_characters", sa.String(length=5), nullable=True),
        sa.Column(
            "api_key_updated_datetime_utc", sa.DateTime(timezone=True), nullable=True
        ),
        sa.Column("content_quota", sa.Integer(), nullable=True),
        sa.Column("created_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column("hashed_api_key", sa.String(length=96), nullable=True),
        sa.Column("updated_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column("workspace_id", sa.Integer(), nullable=False),
        sa.Column("workspace_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("workspace_id"),
        sa.UniqueConstraint("hashed_api_key"),
        sa.UniqueConstraint("workspace_name"),
    )
    op.create_table(
        "user_workspace",
        sa.Column("created_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "default_workspace",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.Column("updated_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "user_role", sa.Enum("ADMIN", "READ_ONLY", name="userroles"), nullable=False
        ),
        sa.Column("workspace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspace.workspace_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "workspace_id"),
    )
    op.add_column("content", sa.Column("workspace_id", sa.Integer(), nullable=False))
    op.drop_constraint("fk_content_user", "content", type_="foreignkey")
    op.create_foreign_key(
        None, "content", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("content", "user_id")
    op.add_column(
        "content_feedback", sa.Column("workspace_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "fk_content_feedback_user_id_user", "content_feedback", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "content_feedback", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("content_feedback", "user_id")
    op.add_column("query", sa.Column("workspace_id", sa.Integer(), nullable=False))
    op.drop_constraint("fk_query_user", "query", type_="foreignkey")
    op.create_foreign_key(
        None, "query", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("query", "user_id")
    op.add_column(
        "query_response", sa.Column("workspace_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "fk_query_response_user_id_user", "query_response", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "query_response", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("query_response", "user_id")
    op.add_column(
        "query_response_content",
        sa.Column("workspace_id", sa.Integer(), nullable=False),
    )
    op.drop_index("idx_user_id_created_datetime", table_name="query_response_content")
    op.create_index(
        "idx_workspace_id_created_datetime",
        "query_response_content",
        ["workspace_id", "created_datetime_utc"],
        unique=False,
    )
    op.drop_constraint(
        "query_response_content_user_id_fkey",
        "query_response_content",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "query_response_content", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("query_response_content", "user_id")
    op.add_column(
        "query_response_feedback",
        sa.Column("workspace_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "fk_query_response_feedback_user_id_user",
        "query_response_feedback",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "query_response_feedback", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("query_response_feedback", "user_id")
    op.add_column("tag", sa.Column("workspace_id", sa.Integer(), nullable=False))
    op.drop_constraint("tag_user_id_fkey", "tag", type_="foreignkey")
    op.create_foreign_key(None, "tag", "workspace", ["workspace_id"], ["workspace_id"])
    op.drop_column("tag", "user_id")
    op.add_column(
        "urgency_query", sa.Column("workspace_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint("fk_urgency_query_user", "urgency_query", type_="foreignkey")
    op.create_foreign_key(
        None, "urgency_query", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("urgency_query", "user_id")
    op.add_column(
        "urgency_response", sa.Column("workspace_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "fk_urgency_response_user_id_user", "urgency_response", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "urgency_response", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("urgency_response", "user_id")
    op.add_column(
        "urgency_rule", sa.Column("workspace_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint("fk_urgency_rule_user", "urgency_rule", type_="foreignkey")
    op.create_foreign_key(
        None, "urgency_rule", "workspace", ["workspace_id"], ["workspace_id"]
    )
    op.drop_column("urgency_rule", "user_id")
    op.drop_constraint("user_hashed_api_key_key", "user", type_="unique")
    op.drop_column("user", "content_quota")
    op.drop_column("user", "api_daily_quota")
    op.drop_column("user", "api_key_first_characters")
    op.drop_column("user", "hashed_api_key")
    op.drop_column("user", "api_key_updated_datetime_utc")
    op.drop_column("user", "is_admin")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column(
            "is_admin",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "api_key_updated_datetime_utc",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "hashed_api_key", sa.VARCHAR(length=96), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "api_key_first_characters",
            sa.VARCHAR(length=5),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "user",
        sa.Column("api_daily_quota", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "user",
        sa.Column("content_quota", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint("user_hashed_api_key_key", "user", ["hashed_api_key"])
    op.add_column(
        "urgency_rule",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "urgency_rule", type_="foreignkey")
    op.create_foreign_key(
        "fk_urgency_rule_user", "urgency_rule", "user", ["user_id"], ["user_id"]
    )
    op.drop_column("urgency_rule", "workspace_id")
    op.add_column(
        "urgency_response",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "urgency_response", type_="foreignkey")
    op.create_foreign_key(
        "fk_urgency_response_user_id_user",
        "urgency_response",
        "user",
        ["user_id"],
        ["user_id"],
    )
    op.drop_column("urgency_response", "workspace_id")
    op.add_column(
        "urgency_query",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "urgency_query", type_="foreignkey")
    op.create_foreign_key(
        "fk_urgency_query_user", "urgency_query", "user", ["user_id"], ["user_id"]
    )
    op.drop_column("urgency_query", "workspace_id")
    op.add_column(
        "tag", sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "tag", type_="foreignkey")
    op.create_foreign_key("tag_user_id_fkey", "tag", "user", ["user_id"], ["user_id"])
    op.drop_column("tag", "workspace_id")
    op.add_column(
        "query_response_feedback",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "query_response_feedback", type_="foreignkey")
    op.create_foreign_key(
        "fk_query_response_feedback_user_id_user",
        "query_response_feedback",
        "user",
        ["user_id"],
        ["user_id"],
    )
    op.drop_column("query_response_feedback", "workspace_id")
    op.add_column(
        "query_response_content",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "query_response_content", type_="foreignkey")
    op.create_foreign_key(
        "query_response_content_user_id_fkey",
        "query_response_content",
        "user",
        ["user_id"],
        ["user_id"],
    )
    op.drop_index(
        "idx_workspace_id_created_datetime", table_name="query_response_content"
    )
    op.create_index(
        "idx_user_id_created_datetime",
        "query_response_content",
        ["user_id", "created_datetime_utc"],
        unique=False,
    )
    op.drop_column("query_response_content", "workspace_id")
    op.add_column(
        "query_response",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "query_response", type_="foreignkey")
    op.create_foreign_key(
        "fk_query_response_user_id_user",
        "query_response",
        "user",
        ["user_id"],
        ["user_id"],
    )
    op.drop_column("query_response", "workspace_id")
    op.add_column(
        "query", sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "query", type_="foreignkey")
    op.create_foreign_key("fk_query_user", "query", "user", ["user_id"], ["user_id"])
    op.drop_column("query", "workspace_id")
    op.add_column(
        "content_feedback",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "content_feedback", type_="foreignkey")
    op.create_foreign_key(
        "fk_content_feedback_user_id_user",
        "content_feedback",
        "user",
        ["user_id"],
        ["user_id"],
    )
    op.drop_column("content_feedback", "workspace_id")
    op.add_column(
        "content",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "content", type_="foreignkey")
    op.create_foreign_key(
        "fk_content_user", "content", "user", ["user_id"], ["user_id"]
    )
    op.drop_column("content", "workspace_id")
    op.drop_table("user_workspace")
    op.drop_table("workspace")
    # ### end Alembic commands ###
